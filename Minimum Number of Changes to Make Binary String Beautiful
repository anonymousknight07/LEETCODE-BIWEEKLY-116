Minimum Number of Changes to Make Binary String Beautiful

Link to the question- 
https://leetcode.com/problems/minimum-number-of-changes-to-make-binary-string-beautiful/

Question-

You are given a 0-indexed binary string s having an even length.
A string is beautiful if it's possible to partition it into one or more substrings such that:
Each substring has an even length.
Each substring contains only 1's or only 0's.
You can change any character in s to 0 or 1.
Return the minimum number of changes required to make the string s beautiful.

Solution-

class Solution {
public:
    int minChanges(string s) {
    int totalCount = 0;

    for (int index = 0; index < s.size() - 1; index += 2) {
        if (s[index] != s[index + 1]) {
            totalCount++;
        }
    }

    return totalCount;

    }
};
